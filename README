Run it:
   thor tests:all -c clorox

   Prevent logging overload
     - In one terminal window (this one will be inundated with selenium logging message)
         thor tests:rc_start
     - In another
         thor tests:all -c clorox


Need 2 gems:
     gem install -v 1.2.8 rspec
     gem install -v 1.2.7 selenium-client

Viewing Results:
   open up tmp/rspec_report/acceptance_tests_report.html  in a browser to see what happened.

   - The heavy lifting is done in the example files (search_example.rb)   
   - defaults.rb:  UI Mapping  The element locators used by the scripts are separated from the script itself.
        It makes the code more self documenting:

      click_wait "//input[@value='Create']"      # does not give you much idea about what we are trying to accomplish
      click_wait ui[:submit_keyword_creation_btn_lctr]          # tells more of the story

   -  I just glossed over the whole account creation/login part of the equation, but if you were to extend this framework with that in mind,
        you would create a new file called "registration_spec.rb".  The rake task will run any files it finds called *spec.rb.
   - If you create a new spec file, make a new section in defaults.rb for the UI locators needed for that piece.  

Notes:

* Mac Issues? Should be resolved by upgrade to selenium-server-standalone-2.0a2
* Doesn't do much, yet

